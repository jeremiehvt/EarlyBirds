{% extends 'base.html.twig' %}

{% block title %}NAO - Profil{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css"
          integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
          crossorigin=""/>
{% endblock %}

{% block body %}

<div id="profilePanel">
    <div class="row" style="background-color: #0D47A1; height: 336px">
        <div class="col s12 l3 center">
            <img id="profilePicture" src="{% if app.user.img %}{% if app.user.img matches '/^https?:/' %}{{ app.user.img | replace({'sz=50':'sz=256'}) }}{% else %}{{ app.user.img }}{% endif %}{% else %}{{ '#' }}{% endif %}" alt="" class="circle responsive-img">
        </div>
        <div class="col s12 offset-l1 l4">
            <span>124 obervations</span>
            <div class="progress right-align">
                <div class="determinate" style="width: 70%"></div>
            </div>
            <span>226 points</span><span>1237 points</span>
        </div>

    </div>
</div>

    <div class="row">
        <div class="tabs-vertical">
            <div class="col s2">
                <ul class="tabs">
                    <li class="tab">
                        <a href="#dashboard"><i class="material-icons" style="font-size: 4em">dashboard</i></a>
                    </li>
                    <li class="tab">
                        <a href="#profil"><i class="material-icons" style="font-size: 4em">contact_mail</i></a>
                    </li>
                    <li class="tab">
                        <a href="#observations"><img id="icon" src="{{ asset('/img/icons/Very-Basic-Binoculars-icon.png') }}"></a>
                    </li>
                    <li class="tab">
                        <a href="#posts"><i class="material-icons" style="font-size: 4em">assignment</i></a>
                    </li>
                    {% if is_granted('ROLE_USER')%}
                    <li class="tab">
                        <a href="#admin"><i class="material-icons" style="font-size: 4em">assignment</i></a>
                    </li>
                    {% endif %}
                </ul>
            </div>
            <div class="col s10 m9 l8">
                <div id="dashboard" class="tab-content">

                    <div class="row">
                        <div class="col s12 offset-m1 m5">

                            <div class="row">
                                <div class="col s12">
                                    <div class="card-panel blue-grey darken-1">
                                        <h5 class="white-text center">Mes derni√®res observations</h5>
                                    </div>
                                </div>
                            </div>
                            {% set index = 0 %}
                    {% for observe in observes if index < 5 %}

                        {% set index = index+1 %}

                        <div class="col s12">
                            <div class="card">
                                <div class="card-image">
                                    <img src="{{ observe.img }}">
                                    <span class="card-title">Titre d'observation</span>
                                    <a class="btn-floating halfway-fab waves-effect waves-light red"><i class="material-icons">add</i></a>
                                </div>
                                <div class="card-content">
                                    <p>I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.</p>
                                </div>
                            </div>
                        </div>

                    {% endfor %}

                        </div>

                        <div class="col s12 offset-m1 m5">

                            <div class="row">
                                <div class="col s12">
                                    <div class="card-panel blue-grey darken-1">
                                        <h5 class="white-text center">Mes articles favoris</h5>
                                    </div>
                                </div>
                            </div>

                            <div class="col s12">
                                <div class="card">
                                    <div class="card-image">
                                        <img src="#">
                                        <span class="card-title">Posts</span>
                                        <a class="btn-floating halfway-fab waves-effect waves-light red"><i class="material-icons">add</i></a>
                                    </div>
                                    <div class="card-content">
                                        <p>I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.</p>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
                <div id="profil" class="tab-content">

                    <div class="row" id="loginPanel">
                        <div class="card-panel grey lighten-4 hoverable col s10 offset-s1">
                            <div class="row" style="padding-top: 6%; padding-bottom: 3%">


                                {{ form_start(form) }}

                                <div class="row">
                                    <div class="input-field col s10 offset-s1">
                                        <input disabled value="{{ app.user.email }}" id="disabled" type="text" class="validate">
                                        <label for="disabled">Email</label>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="input-field col s10 offset-s1">
                                        {{ form_widget(form.nickname, {
                                            'attr':{
                                                'class':'validate',
                                                'value':app.user.nickname
                                            }
                                        }) }}
                                        {{ form_label(form.nickname) }}
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="input-field offset-s1 col s5">
                                        {{ form_widget(form.firstname, {
                                            'attr':{
                                                'class':'validate',
                                                'value':app.user.firstname
                                            }
                                        }) }}
                                        {{ form_label(form.firstname) }}
                                    </div>
                                    <div class="input-field col s5">
                                        {{ form_widget(form.lastname, {
                                            'attr':{
                                                'class':'validate',
                                                'value':app.user.lastname
                                            }
                                        }) }}
                                        {{ form_label(form.lastname) }}
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="file-field input-field col s10 offset-s1">
                                        <div class="btn">
                                            <span>Envoyer un avatar</span>
                                            {{ form_widget(form.img) }}
                                        </div>
                                        <div class="file-path-wrapper">
                                            <input class="file-path validate" type="text">
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="input-field col s4 offset-s4 center">
                                        <button class="btn waves-effect waves-light cyan lighten-2 black-text" type="submit" name="action">Modifier
                                            <i class="material-icons right">send</i>
                                        </button>
                                    </div>
                                </div>

                                {{ form_end(form) }}

                            </div>
                        </div>
                    </div>
                </div>
                <div id="observations" class="tab-content">

                    <div class="row">
                        <div class="col s6">
                            <div class="card-panel blue-grey darken-1">
                                <h5 class="white-text center">Mes observations</h5>
                            </div>
                        </div>
                        <div class="col s6 center" style="height: inherit">
                            <a href="{{ path('app_observe') }}" class="waves-effect waves-light btn">Saisir une observation</a>
                        </div>
                    </div>

                    <div class="row">

                    <ul class="collapsible popout">
                        {% for observe in observes %}
                            <li class="observePanel" data-index="{{ observe.id }}" data-lat="{{ observe.latitude }}" data-long="{{ observe.longitude }}">
                                <div class="collapsible-header js-taxref" data-taxref="{{ path('taxref', {id: observe.ref.id}) }}">

                                    <div class="imgContainer">
                                        <img id="thumbnails" src="{{ observe.img }}" class="materialboxed" style="display: block">
                                    </div>
                                    <div id="ObsTitle" class="col s8 xl10  center">
                                        <p>{{ observe.createdAt|localizeddate('full', 'none') }}</p>
                                        <hr>
                                        <div id="obsButtons" class="row">
                                            <div class="col s4 m3 l2 xl1">
                                                {% if observe.validator is same as(null) %}
                                                    <img src="{{ asset('/img/icons/baseline-hourglass_empty-24px.svg') }}">
                                                    {% else %}
                                                    <img src="{{ asset('/img/icons/baseline-assignment_turned_in-24px.svg') }}">
                                                {% endif %}
                                            </div>
                                            <div class="col s4 m3 l2 xl1">
                                                {% if observe.validator is same as(null) %}
                                                    <img class="modifObs" src="{{ asset('/img/icons/baseline-edit-24px.svg') }}" href="#">
                                                {% else %}
                                                    <img src="{{ asset('/img/icons/baseline-edit-24px.svg') }}" style="opacity: 0.5">
                                                {% endif %}
                                            </div>
                                            <div class="col s4 m3 l2 xl1">
                                                {% if observe.validator is same as(null) %}
                                                    <img class="delObs" src="{{ asset('/img/icons/baseline-delete-24px.svg') }}">
                                                {% else %}
                                                    <img src="{{ asset('/img/icons/baseline-delete-24px.svg') }}" style="opacity: 0.5">
                                                {% endif %}
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="collapsible-body">
                                    <div class="row">
                                        <div id="mapContainer" class="map-container-{{ observe.id }} row" data-index="{{ observe.id }}">
                                            <div class="obsMapDiv col s6">
                                                <ul id="info">
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col s12">
                                            <p>{{ observe.description }}</p>
                                        </div>
                                    </div>
                                </div>
                            </li>
                        {% endfor %}
                    </ul>

                </div>

                </div>
                <div id="posts" class="tab-content">
                    <b>POSTS</b>
                </div>
                {% if is_granted('ROLE_USER')%}
                <div id="admin" class="tab-content">

                    <div class="row">
                        <div class="col s12">
                            <div class="card-panel white">

                                <table class="responsive-table highlight">
                                    <thead>
                                    <tr>
                                        <th></th>
                                        <th>Email</th>
                                        <th>Role</th>
                                        <th>Observations</th>
                                        <th>Compte cr√©√© le</th>
                                        <th>Actions</th>
                                    </tr>
                                    </thead>

                                    <tbody>

                                        {% for user in users %}
                                    <tr>
                                        <td>
                                            <img class="avatarTable" src="{{ user.img }}">
                                        </td>
                                        <td>{{ user.email }}</td>
                                        <td>
                                            {% if user.roles.0 == "ROLE_USER" %}
                                                Utilisateur
                                            {% elseif user.roles.0 == "ROLE_NATURALIST"%}
                                                Naturaliste
                                            {% elseif user.roles.0 == "ROLE_ADMIN" %}
                                                ADMIN
                                            {% endif %}
                                        </td>
                                        <td>{{ user.observes.count }}</td>
                                        <td>{{ user.createdAt|date('d/m/Y') }}</td>
                                        <td>
                                            <a class="waves-effect waves-light btn"><i class="material-icons">create</i></a>
                                            <a href="#modalDelUser" class="waves-effect waves-light btn red darken-2 modal-trigger"><i class="material-icons">delete</i></a>
                                            {% if is_granted('ROLE_ADMIN') == false %}
                                                <a class="waves-effect waves-light btn green accent-4"><i class="material-icons">publish</i></a>
                                            {% endif %}
                                        </td>
                                    </tr>
                                        {% endfor %}

                                    </tbody>

                                </table>

                                <!-- Modal Structure -->
                                <div id="modalDelUser" class="modal">
                                    <div class="modal-content">
                                        <h4>Modal Header</h4>
                                        <p>A bunch of text</p>
                                    </div>
                                    <div class="modal-footer">
                                        <a href="#!" class="modal-close waves-effect waves-green btn-flat">Agree</a>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>


                </div>
                {% endif %}
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"
            integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
            crossorigin=""></script>
    <script>
        // little spinner code
        let spinner = '<div id="spinner" class="col s12 center">' +
            '<div class="preloader-wrapper small active">' +
            '<div class="spinner-layer spinner-green-only">' +
            '<div class="circle-clipper left">' +
            '<div class="circle"></div>' +
            '</div><div class="gap-patch">' +
            '<div class="circle"></div>' +
            '</div><div class="circle-clipper right">' +
            '<div class="circle"></div>' +
            '</div>' +
            '</div>' +
            '</div>' +
            '</div>';

        // Big spinner code
        let bigSpinner = '<div id="bigSpinner" class="col s12 center">' +
            '<div class="preloader-wrapper big active">' +
            '    <div class="spinner-layer spinner-green-only">' +
            '      <div class="circle-clipper left">' +
            '        <div class="circle"></div>' +
            '      </div><div class="gap-patch">' +
            '        <div class="circle"></div>' +
            '      </div><div class="circle-clipper right">' +
            '        <div class="circle"></div>' +
            '      </div>' +
            '    </div>' +
            '  </div>' +
            ' </div>';

        $(document).ready(function() {
            // Flash message display loop
            {% for flash in app.flashes('profile') %}
                $(function () {
                    M.toast({html: '<span>{{ flash }}</span>'});
                });
            {% endfor %}

            $('.js-taxref').each(function () {
                let $taxref = $(this);
                $(this).find('#ObsTitle').prepend(spinner);
                $taxref.parent().find('#info').append(bigSpinner);
                let taxrefData = $(this).data('taxref');

                $.getJSON(taxrefData, function (data) {
                    $.each(data, function (key, val) {
                        $taxref.find('#spinner').remove();
                        $taxref.parent().find('#bigSpinner').remove();
                        if ('nomVern' === key) {
                            $taxref.find('#ObsTitle').prepend('<h6>' + val + '</h6>');
                        }
                        if ('nomVern' === key) {
                            $taxref.parent().find('#info').append('<li>Nom vernaculaire : ' + val + '</li>');
                        }
                        if ('regne' === key) {
                            $taxref.parent().find('#info').append('<li>R√®gne : ' + val + '</li>');
                        }
                        if ('phylum' === key) {
                            $taxref.parent().find('#info').append('<li>Embranchement : ' + val + '</li>');
                        }
                        if ('famille' === key) {
                            $taxref.parent().find('#info').append('<li>Famille : ' + val + '</li>');
                        }
                        if ('habitat' === key) {
                            $taxref.parent().find('#info').append('<li>Habitat : ' + habitat(val) + '</li>');
                        }
                        if (null != lb(val) && null != status(key)) {
                            $taxref.parent().find('#info').append('<li>' + lb(val) + ' ' + status(key) + '</li>');
                        }
                        if ('rang' === key) {
                            $taxref.parent().find('#info').append('<li>Rang : ' + rang(val) + '</li>');
                        }
                    })
                })
            });

            $('.materialboxed').click(function (e) {
                e.stopPropagation();
            });

            $('.modifObs').click(function (e) {
                return false;
            });
        });

        document.addEventListener('DOMContentLoaded', function() {
            let images =document.querySelectorAll('.materialboxed');
            let elems = document.querySelectorAll('.collapsible');
            let tulles = M.Collapsible.init(elems, {
                onCloseStart: function (e) {
                    deleteMap(e);
                },
                onOpenEnd: function (e) {
                    createMap(e);
                },
            });
            let imagesAnim = M.Materialbox.init(images, {
                onOpenStart: function (e) {
                    $(elems).find('#obsMap').remove();
                },
                onCloseStart: function (e) {
                    if ($('li.observePanel.active').length === 1) {
                        createMap($('li[class*="active"]'));
                    };
                }
            });
        });

        function createMap(e) {
            let index = $(e).data('index');
            let lat = $(e).data('lat');
            let long = $(e).data('long');

            let $mapContainer = $('.' + 'map-container-' + index);

            $($mapContainer).append('<div id="obsMap" class="map-' + index + ' col s12 l6" style="height: 400px; padding: 0"></div>');

            let mymap = L.map('obsMap').setView([lat, long], 11);

            L.marker([lat, long]).addTo(mymap);

            L.tileLayer(
                'https://api.mapbox.com/styles/v1/mapbox/outdoors-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoibmVva2lsbGVyMTEzIiwiYSI6ImNqZ2h2c2xxMzBsbm0ycWsxemJ6YnNpZXEifQ.PiGeZsNjVNyo1G80Y1KD4Q', {
                maxZoom: 18,
                id: 'mapbox.streets',
            }).addTo(mymap);
        }

        function deleteMap(e) {
            let index = $(e).data('index');
            let $map = $('.' + 'map-' + index);
            $($map).remove();
        }

        function lb(rang) {
            switch (rang) {
                case "A":
                    return "Absente";
                    break;
                case "B":
                    return "Accidentelle / Visiteuse";
                    break;
                case "C":
                    return "Cryptog√®ne";
                    break;
                case "D":
                    return "Douteuse";
                    break;
                case "E":
                    return "End√©mique";
                    break;
                case "F":
                    return "Trouv√©e en fouille";
                    break;
                case "I":
                    return "Introduite";
                    break;
                case "J":
                    return "Introduite envahissante";
                    break;
                case "M":
                    return "Domestique / Introduite non √©tablie";
                    break;
                case "P":
                    return "Pr√©sente";
                    break;
                case "Q":
                    return "Mentionn√©e par erreur";
                    break;
                case "S":
                    return "Subend√©mique";
                    break;
                case "W":
                    return "Disparue";
                    break;
                case "X":
                    return "√âteinte";
                    break;
                case "Y":
                    return "Introduite √©teinte";
                    break;
                case "Z":
                    return "End√©mique √©teinte";
                    break;
            }
        }

        function status(status) {
            switch (status) {
                case "fr":
                    return "en France m√©tropolitaine";
                    break;
                case "gf":
                    return "en Guyane fran√ßaise";
                    break;
                case "mar":
                    return "√† la Martinique";
                    break;
                case "gua":
                    return "√† la Guadeloupe";
                    break;
                case "sm":
                    return "√† Saint-Martin";
                    break;
                case "spm":
                    return "√† Saint-Pierre et Miquelon";
                    break;
                case "may":
                    return "√† Mayotte";
                    break;
                case "epa":
                    return "aux √éles √âparses";
                    break;
                case "reu":
                    return "√† la R√©union";
                    break;
                case "sa":
                    return "aux √Æles subantarctiques";
                    break;
                case "ta":
                    return "en Terre Ad√©lie";
                    break;
                case "nc":
                    return "en Nouvelle-Cal√©donie";
                    break;
                case "wf":
                    return "√† Wallis et Futuna";
                    break;
                case "pf":
                    return "en Polyn√©sie fran√ßaise";
                    break;
                case "cli":
                    return "√† Clipperton";
                    break;
                case "sb":
                    return "√† Saint-Barth√©lemy";
                    break;
            }

        }

        function rang(rang) {
            switch (rang) {
                case "KD":
                    return "R√®gne";
                    break;
                case "PH":
                    return "Embranchement";
                    break;
                case "CL":
                    return "Classe";
                    break;
                case "OR":
                    return "Ordre";
                    break;
                case "FM":
                    return "Famille";
                    break;
                case "GN":
                    return "Genre";
                    break;
                case "AGES":
                    return "Agr√©gat";
                    break;
                case "ES":
                    return "Esp√®ce";
                    break;
                case "SSES":
                    return "Sous-esp√®ce";
                    break;
                case "CVAR":
                    return "Convari√©t√©";
                    break;
                case "VAR":
                    return "Vari√©t√©";
                    break;
                case "FO":
                    return "Forme";
                    break;
                case "SSFO":
                    return "Sous-forme";
                    break;
                case "RACE":
                    return "Race";
                    break;
                case "HYB":
                    return "Hybride";
                    break;
            }
        }

        function habitat(habitat) {
            switch (habitat) {
                case "1":
                    return "Marin";
                    break;
                case "2":
                    return "Eau douce";
                    break;
                case "3":
                    return "Terrestre";
                    break;
                case "4":
                    return "Marin & Eau douce";
                    break;
                case "5":
                    return "Marin & Terrestre";
                    break;
                case "6":
                    return "Eau saum√¢tre";
                    break;
                case "7":
                    return "Continental (terrestre et/ou eau douce)";
                    break;
                case "8":
                    return 'Continental (terrestre et eau douce)';
                    break;
            }
        }
    </script>
{% endblock %}

