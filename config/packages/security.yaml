security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
        Symfony\Component\Security\Core\User\User: plaintext
    providers:
        chain_provider:
            chain:
                providers: [doctrine, in_memory, user_db]
        doctrine:
            entity:
                class: App\Entity\User
                property: email
        in_memory:
            memory:
                users:
                    admin@admin.com:
                        password: admin
                        roles: ROLE_ADMIN
        user_db:
            entity: { class: App\Entity\User, property: email }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
#        main:
#            anonymous: ~
#            form_login:
#                login_path: login
#                check_path: login
        secured_area:

            provider: in_memory

            # Turn on anonymous for testings need.
            anonymous: ~
            form_login:
                # submit the login form here
                check_path: /login
#                provider: in_memory
#                # the user is redirected here when they need to log in
                login_path: /login
#
#                # if true, forward the user to the login form instead of redirecting
#                use_forward: false
#
#                # login success redirecting options
#                always_use_default_target_path: true
#                default_target_path: /profile
#
                username_parameter: _email
            oauth:
#                provider: user_db
                resource_owners:
                    google: /login/check-google
                    facebook: /login/check-facebook
                login_path: /login
#                check_path: /login_check
#
#                # if true, forward the user to the login form instead of redirecting
#                use_forward: false
#                failure_path: /fail
#
                oauth_user_provider:
                    service: hwi_oauth.user.provider.entity

            logout:
                path:   /logout
                target: /
                invalidate_session: false
#                delete_cookies:
#                    a: { path: null, domain: null }
#                    b: { path: null, domain: null }
##                handlers: [some.service.id, another.service.id]
#                success_handler: some.service.id

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
